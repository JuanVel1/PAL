plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    } 
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    
    // Database
    implementation 'com.h2database:h2'
    implementation 'org.postgresql:postgresql'
    
    // Utilities
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'me.paulschwarz:spring-dotenv:3.0.0'
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
    implementation 'com.itextpdf:itextpdf:5.5.13.3'
    implementation 'com.itextpdf:itext7-core:8.0.2'
    implementation 'com.itextpdf:html2pdf:4.0.5'

    // Development
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}
 
 
tasks.named('test') {
	useJUnitPlatform()
}

 
 